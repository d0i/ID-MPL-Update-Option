# Introduction

Multicast Protocol for Low power and Lossy Networks [(MPL)](#I-D.ietf-roll-trickle-mcast) defines a protocol to make a multicast network among low-power and lossy networks, e.g., wireless mesh networks. MPL has a set of parameters to control an MPL domain. The parameters control the trade-off between end-to-end delay and network utilization. In most environments, the default parameters are acceptable. However, in some environments, the parameter set must be configured carefully in order to meet the requirements of each environment. According to the MPL document section 5.4, each parameter in the set should be the same for all nodes within an MPL domain, but the MPL document does not define a method to configure the MPL parameter set.

Some managed wireless mesh networks may have a DHCP server to configure network parameters. MPL parameter sets shall be considered as a part of network parameters (nodes in an MPL domain should use an identical parameter set). And a parameter set is required to configure an MPL domain.

This document defines the way to distribute parameter sets for MPL forwarders as a [DHCPv6](#RFC3315) option. This document is intended to follow [](#RFC7227) the guideline.

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this document are to be interpreted as described in [](#RFC2119).

# MPL Parameter Configuration Option

As stated in Section 5.4 of [](#I-D.ietf-roll-trickle-mcast), there are the following 10 parameters per MPL domain. An MPL domain is defined by an MPL domain address, as described in Section 2 of [](#I-D.ietf-roll-trickle-mcast).

 - PROACTIVE_FORWARDING
 - SEED_SET_ENTRY_LIFETIME
 - DATA_MESSAGE_IMIN
 - DATA_MESSAGE_IMAX
 - DATA_MESSAGE_K
 - DATA_MESSAGE_TIMER_EXPIRATIONS
 - CONTROL_MESSAGE_IMIN
 - CONTROL_MESSAGE_IMAX
 - CONTROL_MESSAGE_K
 - CONTROL_MESSAGE_TIMER_EXPIRATIONS

One network may have multiple MPL domains with different configurations. To configure more than one MPL domain via DHCP, there may be more than one MPL Parameter Configuration Option given to DHCP clients by a DHCP server.

## MPL Parameter Configuration Option Format

To distribute a configuration of an MPL domain or a default value for all MPL domains (wildcard) under the network managed by the DHCP server, this document defines a DHCPv6 option format as follows.


     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    OPTION_MPL_PARAMETERS      |          option_len           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |P|     Z       |     TUNIT     |            SE_LIFETIME        |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    DM_K       |         DM_IMIN               |     DM_IMAX   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |         DM_T_EXP              |      C_K      |    C_IMIN     >
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    >(cont'ed)      |    C_IMAX     |          C_T_EXP              |     
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    (if option_len = 32 )
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |          MPL Domain Address  (128bits)                        >
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    >          (cont'ed)                                            >
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    >          (cont'ed)                                            >
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    >          (cont'ed)                                            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+



`OPTION_MPL_PARAMETERS`:
:    DHCPv6 option identifier (not yet assigned).
`option_len`:
:    Length of the option. It SHOULD be 16 (without MPL domain address) or 32 (with MPL domain address).
`P` (1 bit):
:    A flag to indicate PROACTIVE_FORWARDING. The flag is set if PROACTIVE_FORWARDING is true.
`Z` (7 bits):
:    Reserved for future use. Servers MUST set them to zero. Clients SHOULD ignore the bits set.
`TUNIT` (unsigned 8-bit integer):
:    Unit time of timer parameters (SE_LIFETIME, and *_IMIN) in this option. 0 and 0xff are reserved and MUST NOT be used.
`SE_LIFETIME` (unsigned 16-bit integer):
:    SEED_SET_ENTRY_LIFETIME/TUNIT in milliseconds. 0 and 0xffff are reserved and MUST NOT be used.
`DM_K` (unsigned 8-bit integer):
:    DATA_MESSAGE_K.
`DM_IMIN` (unsigned 16-bit integer):
:    DATA_MESSAGE_IMIN/TUNIT in milliseconds. 0 and 0xffff are reserved and MUST NOT be used.
`DM_IMAX` (unsigned 8-bit integer):
:    DATA_MESSAGE_IMAX. The actual maximum timeout is described as a number of doublings of DATA_MESSAGE_IMIN, as described in [](#RFC6206) Section 4.1.  0 and 0xff are reserved and MUST NOT be used.
`DM_T_EXP` (unsigned 16-bit integer):
:    DATA_MESSAGE_TIMER_EXPIRATIONS. 0 and 0xffff are reserved and MUST NOT be used.
`C_K` (unsigned 8-bit integer):
:    CONTROL_MESSAGE_K.
`C_IMIN` (unsigned 16-bit integer):
:    CONTROL_MESSAGE_IMIN/TUNIT in milliseconds. 0 and 0xffff are reserved and MUST NOT be used.
`C_IMAX` (unsigned 8-bit integer):
:    CONTROL_MESSAGE_IMAX. The actual maximum timeout is described as a number of doublings of CONTROL_MESSAGE_IMIN. 0 and 0xff are reserved and MUST NOT be used.
`C_T_EXP` (unsigned 16-bit integer):
:    CONTROL_MESSAGE_TIMER_EXPIRATIONS. 0 and 0xffff are reserved and MUST NOT be used.

Note that the time values (SEED_SET_ENTRY_LIFETIME, DATA_MESSAGE_IMIN, and CONTROL_MESSAGE_IMIN) in MPL are defined in TUNIT milliseconds precision in MPL Parameter Configuration Options. For example, if TUNIT is 20 and the data message interval minimum (DATA_MESSAGE_IMIN) is 1000ms, then DM_IMIN shall be set to 50. 

For maximum interval size (*_IMAX), [](#RFC6206) defines them as follows:

> The maximum interval size, Imax, is described as a number of doublings of the minimum interval size (the base-2 log(max/min)). For example, a protocol might define Imax as 16.  If the minimum interval is 100 ms, then the amount of time specified by Imax is 100 ms * 65,536, i.e., 6,553.6 seconds or approximately 109 minutes.

Because minimum interval size in the MPL Parameter Configuration Options is described as TUNIT millisecond precision, corresponding maximum interval size is also in TUNIT precision. For example, if TUNIT is 10 and C_IMIN is 50, the minimum interval size of the trickle timer for control messages is 500ms. In this case, the maximum interval size of the trickle timer is 32 seconds (500ms * 2^6) if C_IMAX is 6.

## DHCPv6 Client Behavior

Clients MAY request the MPL Parameter Configuration Option, as described in [](#RFC3315), sections 17.1.1, 18.1.1, 18.1.3, 18.1.4, 18.1.5, and 22.7. As a convenience to the reader, we mention here that the client includes requested option codes in the Option Request Option. 

Clients MUST support multiple MPL Parameter Configuration Option, as stated in section 2.

If a DHCPv6 client with an MPL forwarder configured by the MPL Parameter Configuration Option is unable to receive a valid response from a server within T2 of the last valid DHCPv6 message sent from the server (if stateful) or twice the Information Refresh Time (if stateless), it MUST suspend the MPL forwarders of the MPL domains configured by the option. MPL forwarders configured by other methods such as static configuration file MUST NOT be suspended.

Clients MUST ignore all MPL Parameter Configuration Options if the options in a DHCPv6 message contains any invalid value (e.g., it uses reserved all-0 or all-1 values in parameters). In this case, the message is considered not received in MPL context and the condition described in the previous paragraph applies.

## MPL Forwarder Behavior

If a DHCPv6 client requests and receives the MPL Parameter Configuration Option, the node SHOULD join the MPL domain given by the option and act as an MPL forwarder. Note that there may be cases in which a node may fail to join a domain (or domains) due to local resource constraints.
Each joining node SHOULD configure its MPL forwarder with the given parameter set for the MPL domain.

The priority of MPL Parameter Configurations applied to an MPL Domain is as follows (high to low):

 - Specific MPL Parameter Configuration to the MPL Domain (option_len=32)
 - Wildcard MPL Parameter Configuration (option_len=16)
 - Default configuration given in the MPL specification.

Priority of other configurations such as manual configuration given on a node is not defined in the document.

There MUST be no more than one MPL Parameter Configuration Option for an MPL domain or the wildcard. Thus, the order of DHCPv6 options in the packet has no effect on precedence. 

A node MUST leave an MPL domain if it receives an updated and all-valid
MPL Parameter Configuration Options without a configuration for the
MPL domain, unless it has overriding manual configuration on the MPL domain.
In other words, if a node is configured to work as a MPL Forwarder for a MPL domain regardless of DHCPv6 Options,
the node MAY stay on the MPL domain even if it receives an MPL Parameter Configuration Option without configuration for the MPL domain.

MPL parameters may be updated occasionally. With stateful DHCPv6, updates can be done when the renewal timer expires. [Information Refresh Time Option](#RFC4242) shall be used to keep each forwarder updated. 

To reduce periodic update traffic, a node may try to use a very long interval between updates. In this case, reconfigure messages may be used to keep forwarder parameter sets synchronized.

## DHCPv6 Server Behavior

Sections 17.2.2 and 18.2 of [](#RFC3315) govern server operation in regards to option assignment. As a convenience to the reader, we mention here that the server will send the MPL Parameter Configuration Option only if it was configured with specific values for the MPL Parameter Configuration Option and the client requested it.

Servers MUST ignore an incoming MPL Parameter Configuration Option.
Servers MUST support multiple MPL Parameter Configuration Option, as stated in section 2.

## DHCPv6 Relay Behavior 

It's never appropriate for a relay agent to add options to a message heading toward the client, and relay agents don't actually construct Relay-Reply messages anyway. There are no additional requirements for relays.

## Operational Considerations

This draft introduces dynamic update of MPL parameters. Because the
update process is not synchronized, nodes may have inconsistent
parameter sets.

[](#RFC6206) section 6 describe various problems that happens if the trickle timers do not match between communicating nodes. To keep the timers synchronized, it is RECOMMENDED not to update the parameters of an MPL domain too often. A reasonable update rate would be once per expected information refresh time interval, such as T1 in [](#RFC3315) or Information Refresh Time in [](#RFC4242).

Inconsistent parameter sets may reduce performance. On the other hand, 
this situation
will work as long as both new and old parameter sets are reasonable parameter sets
for a given communication load. As the motivations for parameter update
include update of the environment, node density, or communication load,
operators of MPL networks shall be aware of unupdated nodes and make
sure old and new parameter sets are reasonable for the expected refresh
intervals.

# IANA Considerations

IANA is requested to assign one option code for OPTION_MPL_PARAMETERS from the "DHCP Option Codes" table of the Dynamic Host Configuration Protocol for IPv6 (DHCPv6) Registry (http://www.iana.org/assignments/dhcpv6-parameters).

# Security Considerations

There are detailed discussion on security threats on DHCPv6 in Section 23 of [RFC3315](#RFC3315), Section 23 of [RFC7227](#RFC7227), and Section 13 of [I-D.ietf-roll-trickle-mcast].

In addition, a forged MPL parameter configuration 
may cause excessive layer-2 broadcasting. 
Implementations should set reasonable bounds for
each parameter. For example, not too high DM/C_K, not too low DM/C_IMIN, etc.
These bounds may be implementation dependent or may be derived from MAC/PHY specifications.
DHCPv6 server and client implementations need to take care
in setting reasonable bounds for each parameter in order to avoid
overloading the network.

The DHCP server or the network itself should be trusted by
some means such as DHCPv6 authentications described in Section 21 of [RFC3315](#RFC3315).
However, ROLL environment may expect less computing resource, and DHCPv6 authentication may not available.
In such cases, other methods to protect integrity between DHCPv6 servers and clients should be applied to a ROLL network.
Some ROLL specification such as [ZigBee IP](#ZigBeeIP) expects [RFC5191](#RFC5191) to authenticate
joining nodes and all nodes in the network can be trusted. To protect attacks from outside of the network,
DHCPv6 packets SHOULD be filtered on the border router between the ROLL network and the Internet, except for the packets between the ROLL network and a remote DHCPv6 server or DHCPv6 relays configured to manage the network.
